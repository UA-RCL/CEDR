41,42c41,42
< //void mmult_fpga(float *A, float *Ai, float *Binput, float *Binputimag, float *output, float *output_i) {
< void mmult_fpga(float *A, float *Ai, float *B, float *Bi, float *output, float *output_i) {
---
> void mmult_fpga(float *A, float *Ai, float *Binput, float *Binputimag, float *output, float *output_i) {
> //void mmult_fpga(float *A, float *Ai, float *B, float *Bi, float *output, float *output_i) {
54,58c54,58
< //  float *B, *Bi;
< //
< //  B = (float*) malloc(M * N * sizeof(float));
< //  Bi = (float*) malloc(M * N * sizeof(float));
< //  hermitian(Binput, Binputimag, B, Bi);
---
>   float *B, *Bi;
> 
>   B = (float*) malloc(M * N * sizeof(float));
>   Bi = (float*) malloc(M * N * sizeof(float));
>   hermitian(Binput, Binputimag, B, Bi);
236,237c236,237
< //  mmult_fpga(Z, Zi, Shermitian, Shermitianimag, result1_fpga, result1imag_fpga);
<   mmult_fpga(Z, Zi, S, Si, result1_fpga, result1imag_fpga);
---
>   mmult_fpga(Z, Zi, Shermitian, Shermitianimag, result1_fpga, result1imag_fpga);
> //  mmult_fpga(Z, Zi, S, Si, result1_fpga, result1imag_fpga);
